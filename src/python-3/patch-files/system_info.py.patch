--- numpy-1.9.1/numpy/distutils/system_info.py	2014-10-26 09:22:33.000000000 -0700
+++ patch-files/system_info.py	2014-11-20 07:37:32.312800735 -0800
@@ -201,7 +201,7 @@
     default_include_dirs = ['/usr/local/include',
                             '/opt/include', '/usr/include',
                             # path of umfpack under macports
-                            '/opt/local/include/ufsparse',
+                            #'/opt/local/include/ufsparse',
                             '/opt/local/include', '/sw/include',
                             '/usr/include/suitesparse']
     default_src_dirs = ['.', '/usr/local/src', '/opt/src', '/sw/src']
@@ -211,13 +211,13 @@
     default_x11_include_dirs = ['/usr/X11R6/include', '/usr/X11/include',
                                 '/usr/include']
 
-    if os.path.exists('/usr/lib/X11'):
-        globbed_x11_dir = glob('/usr/lib/*/libX11.so')
-        if globbed_x11_dir:
-            x11_so_dir = os.path.split(globbed_x11_dir[0])[0]
-            default_x11_lib_dirs.extend([x11_so_dir, '/usr/lib/X11'])
-            default_x11_include_dirs.extend(['/usr/lib/X11/include',
-                                             '/usr/include/X11'])
+#    if os.path.exists('/usr/lib/X11'):
+#        globbed_x11_dir = glob('/usr/lib/*/libX11.so')
+#        if globbed_x11_dir:
+#            x11_so_dir = os.path.split(globbed_x11_dir[0])[0]
+#            default_x11_lib_dirs.extend([x11_so_dir, '/usr/lib/X11'])
+#            default_x11_include_dirs.extend(['/usr/lib/X11/include',
+#                                             '/usr/include/X11'])
 
     import subprocess as sp
     tmp = None
@@ -250,7 +250,11 @@
 default_include_dirs = [_m for _m in default_include_dirs if os.path.isdir(_m)]
 default_src_dirs = [_m for _m in default_src_dirs if os.path.isdir(_m)]
 
-so_ext = get_shared_lib_extension()
+# so_ext = get_shared_lib_extension()
+so_ext = distutils.sysconfig.get_config_vars('SO')[0] or ''
+# fix long extension for Python >=3.2, see PEP 3149.
+if 'SOABI' in distutils.sysconfig.get_config_vars():
+    so_ext = so_ext.replace('.'+distutils.sysconfig.get_config_var('SOABI'), '', 1)
 
 
 def get_standard_file(fname):
@@ -980,8 +984,9 @@
         if sys.platform == 'win32':
             lapack_libs = self.get_libs('lapack_libs', ['mkl_lapack'])
         else:
-            lapack_libs = self.get_libs('lapack_libs',
-                                        ['mkl_lapack32', 'mkl_lapack64'])
+#	    lapack_libs = self.get_libs('lapack_libs')
+#	                  ['mkl_lapack32', 'mkl_lapack64'])
+            lapack_libs = self.get_libs('lapack_libs',[' '])
 
         info = {'libraries': lapack_libs}
         dict_append(info, **mkl)
